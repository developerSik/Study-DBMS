무결성
	데이터의 정확성, 일관성, 유효성이 유지되는 것.

	정확성: 데이터가 애매하지 않아야 한다.
	일관성: 각 사용자가 일관된 데이터를 볼 수 있도록 해야한다.
	유효성: 데이터가 실제 존재하는 데이터여야 한다.

	1. 개체 무결성
		모든 테이블이 PK로 선택된 컬럼을 가져야 한다.

	2. 참조 무결성
		두 테이블의 데이터가 항상 일관된 값을 가지도록 유지하는 것.

	3. 도메인 무결성
		컬럼의 타입, NULL 값의 허용 등에 대한 사항을 정의하고
		올바른 데이터가 입력되었는 지를 확인하는 것.


-----------------------------------------------------------------------------------------
모델링(기획)
	추상적인 주제를 DB의 구조에 맞게 설계하는 것.

1. 요구사항 분석
	회원, 주문, 상품 : 3가지를 모두 관리하고 싶습니다.

2. 개념적 설계(개념 모델링)
	회원		주문		상품
	
	회원 번호		주문 번호		상품 번호
	회원 아이디	주문 날짜		상품 이름
	회원 비밀번호	회원 번호		상품 가격
	회원 이름		상품 번호		상품 재고
	회원 주소		주문 개수
	회원 이메일
	회원 생일
	회원 핸드폰 번호

3. 논리적 설계(논리 모델링)
	회원		주문		상품
	
	회원 번호PK	주문 번호PK	상품 번호PK
	회원 아이디UK	주문 날짜NN	상품 이름NN
	회원 비밀번호NN	회원 번호FK	상품 가격NN
	회원 이름NN	상품 번호FK	상품 재고NN, D(0)
	회원 주소NN	주문 개수C, D(1)
	회원 이메일UK
	회원 생일
	회원 핸드폰 번호UK

4. 물리적 설계
	TBL_MEMBER
	-------------------------------
	MEMBER_ID: NUMBER PK_MEMBER
	-------------------------------
	MEMBER_IDENTIFICATION: VARCHAR2 NOT NULL UNIQUE
	MEMBER_PASSWORD: VARCHAR2 NOT NULL
	MEMBER_NAME: VARCHAR2 NOT NULL
	MEMBER_ADDRESS: VARCHAR2 NOT NULL
	MEMBER_EMAIL: VARCHAR2 NOT NULL UNIQUE
	MEMBER_BIRTH: DATE
	MEMBER_PHONE: VARCHAR2 NOT NULL UNIQUE	

5. 구현
=======================================================================================
1. 요구사항 분석
	꽃 테이블과 화분 테이블 2개가 필요하고,
	꽃을 구매할 때 화분도 같이 구매합니다.
	꽃은 이름과 색상, 가격이 있고,
	화분은 제품번호, 색상, 모양이 있습니다.
	화분은 모든 꽃을 담을 수 없고 알맞은 꽃들을 담아야 합니다.

2. 개념적 설계
	꽃		화분

	꽃 이름		화분 제품 번호
	꽃 색상		화분 색상
	꽃 가격		화분 모양
			꽃 이름
			꽃 색상

3. 논리적 설계
	꽃		화분

	꽃 이름PK		화분 제품 번호PK
	꽃 색상PK
	----------------------------
	꽃 가격NN		화분 모양NN
			화분 색상NN
			꽃 이름FK
			꽃 색상FK

4. 물리적 설계
	TBL_FLOWER		
	----------------------------------
	FLOWER_NAME	VARCHAR2 PK_FLOWER
	FLOWER_COLOR	VARCHAR2 PK_FLOWER
	----------------------------------
	FLOWER_PRICE	NUMBER NOT NULL


	TBL_POT
	----------------------------------
	POT_ID		NUMBER PK_POT
	----------------------------------
	POT_SHAPE	VARCHAR2 NOT NULL
	POT_COLOR	VARCHAR2 NOT NULL
	FLOWER_NAME	VARCHAR2 FOREIGN KEY NOT NULL
	FLOWER_COLOR 	VARCHAR2 FOREIGN KEY NOT NULL

5. 구현
---------------------------------------------------------------------------------------------
1. 요구사항 분석
	동물병원을 오픈하려고 합니다.
	동물의 종과 이름, 나이, 병명이 필요하고
	보호자의 이름, 나이, 주소, 핸드폰 번호가 필요합니다.
	한 명의 보호자는 여러 동물을 등록할 수 있어야 합니다.

2. 개념적 설계
3. 논리적 설계
4. 물리적 설게
5. 구현


